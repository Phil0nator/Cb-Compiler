#ifndef __MATH
#   error "trig.cb should only be included through math/math.cb."
#endif

#define __TRIG

#include "bits/limits.k"
#include "api.cb"

#ifdef __CBLIB_SOURCE
#   include "trig.k"
#endif



/**
 * Taylor series approxomated sin function (degree 9 by default)
 * @param x sin input
 * @returns sin(x)
 */
CBLIBENTRY double sin(double x);

/**
 * Taylor series cosine
 * @see sin
 * @param x input
 * @returns cos(x)
 */
CBLIBENTRY double cos(double x);


/**
 * Taylor series tan
 * @see sin, cos
 * @param x input
 * @returns tan(x)
 * @warning (Will return Inf, -Inf, or QNaN for undefined values)
 */
CBLIBENTRY double tan(double x);


/**
 * Taylor series cot
 * @see tan
 * @param x input
 * @returns cot(x)
 * @warning (Will return Inf, -Inf, or QNaN for undefined values)
 */
CBLIBENTRY double cot(double x);

/**
 * Taylor series sec
 * @see cos
 * @param x input
 * @returns cot(x)
 * @warning (Will return Inf, -Inf, or QNaN for undefined values)
 */
CBLIBENTRY double sec(double x);

/**
 * Taylor series csc
 * @see sin
 * @param x input
 * @returns cot(x)
 * @warning (Will return Inf, -Inf, or QNaN for undefined values)
 */
CBLIBENTRY double csc(double x);


/**
 * Taylor series arcsin (sin^-1)
 * @param x input
 * @returns sin^-1(x)
 * @warning (Will return Inf, -Inf, or QNaN for undefined values)
 */
CBLIBENTRY double asin(double x);

/**
 * Taylor series arccos (cos^-1)
 * @param x input
 * @returns cos^-1(x)
 * @warning (Will return Inf, -Inf, or QNaN for undefined values)
 */
CBLIBENTRY double acos(double x);


/**
 * Taylor series arctan (tan^-1)
 * @param x input
 * @returns tan^-1 (x)
 * @warning (Will return Inf, -Inf, or QNaN for undefined values)
 */
CBLIBENTRY double atan(double x);

/**
 * Taylor series arctan of an x and y coordinate.
 * @param x x coord
 * @param y y coord
 * @returns arctan( y/x )
 * @warning (Will return Inf, -Inf, or QNaN for undefined values)
 */
#define atan2(x, y)         atan((y)/(x));