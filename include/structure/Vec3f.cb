#ifndef __VEC3F
#define __VEC3F 1

#include "api.cb"


/**
 * The Vec3f Structure is used to perform SIMD optimized vector operations for 3D vectors.
 * When AVX is enabled, the Vec3f will be significantly faster.
 */
struct Vec3f{
    /** Main data */
    double x;
    double y;
    double z;
/**
 * Extra padding for AVX flag optimizations
 */
#ifdef __AVX
    long padd = 0;
#endif
    /**
     * Set the value of a vector.
     * @param x x value
     * @param y y value
     * @param z z value
     * @returns None
     */
    CBLIBENTRY void set(double x, double y, double z);

    /**
     * Add two vectors
     * @param other the vector to add
     * @returns None
     */
    CBLIBENTRY void add(Vec3f* other);

    /**
     * Subtract two vectors
     * @param other the vector to subtract
     * @returns None
     */
    CBLIBENTRY void sub(Vec3f* other);

    /**
     * Cross multiply two vectors
     * (Cross product)
     * @param other vector to multiply by
     * @returns None
     */
    CBLIBENTRY void mul(Vec3f* other);


    /**
     * Static divide of vectors.
     *  [this / other] -> { this.x/other.x , this.y / other.y , this.z / other.z }
     * @param other vector to divide by
     * @returns None
     */
    CBLIBENTRY void div(Vec3f* other);


    /**
     * Square root vector. (Each value becomes its square root)
     * @returns None
     */
    CBLIBENTRY void sqrt();


    /**
     * Dot product of vectors
     * @param other operand B
     * @returns dot product of this and other
     */
    CBLIBENTRY double dot(Vec3f* other);




};

#ifdef __CBLIB_SOURCE
#   include "Vec3f.k"
#endif



#endif